<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" creationComplete="creationComplete(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			private static var TOTAL:Number = 15;
			private var PROBABILITY:Number = 0.5;
			private var time:int = 500;
			private var level:int = 1;
			private var dictionaryOfTimes:ArrayCollection;
			private var buttons:ArrayCollection;
			private var correctDoor:int;
			var t:Timer;
			public function clicked(ev:MouseEvent):void
			{
				var boton:int = buttons.getItemIndex(Button(ev.target));
				if (boton != correctDoor)
				{
					meQuieroIr.visible=true;
					progress.visible=true;
					t.start();
					setDoorsAs(false);
				} else {
					nextLevel();
				}
			}
			
			private function setDoorsAs(value:Boolean):void
			{
				for (var i:int = 0; i<buttons.length; i++)
				{
					var currentButton:Button = Button(buttons.getItemAt(i));
					currentButton.enabled=value;
				}
			}
			
			
			public function nextLevel():void
			{
				level++;
				setCorrectDoor();
				t.delay = int(dictionaryOfTimes.getItemAt(level-1));
				this.PROBABILITY = 1 / (level + 1);
				Button(this.buttons.getItemAt(level)).visible=true;				
			}
			
			public function reduceProgress(ev:TimerEvent):void
			{
				if (this.progress.value > 0)
					this.progress.setProgress(this.progress.value - 1, TOTAL);
			}
			
			public function setCorrectDoor():void
			{
					var numero:Number = Math.random()*(level+1) - 0.01;
					correctDoor=int(numero);
			}
			
			protected function creationComplete(event:FlexEvent):void
			{
				setCorrectDoor();
				dictionaryOfTimes =new ArrayCollection();
				dictionaryOfTimes.addItem(500);
				dictionaryOfTimes.addItem(350);
				dictionaryOfTimes.addItem(275);
				dictionaryOfTimes.addItem(200);
				t= new Timer(int(dictionaryOfTimes.getItemAt(level)));
				t.addEventListener(TimerEvent.TIMER, reduceProgress);
				buttons = new ArrayCollection();
				this.buttons.addItem(puerta1);
				this.buttons.addItem(puerta2);
				this.buttons.addItem(puerta3);
				this.buttons.addItem(puerta4);
				this.buttons.addItem(puerta5);
			}
			
			public function iWannaGo():void
			{
				this.progress.setProgress(this.progress.value + 1, TOTAL);
			}
			
			protected function completed(event:Event):void
			{
				t.stop();
				this.progress.setProgress(0, TOTAL);
				this.progress.visible=false;
				this.meQuieroIr.visible=false;		
				setDoorsAs(true);
			}
			
		]]>
	</fx:Script>
	<s:Button id="puerta1" x="67" y="161" label="Puerta 1" click="clicked(event)"/>
	<s:Button id="puerta2" x="181" y="161" label="Puerta 2" click="clicked(event)"/>
	<s:Button id="meQuieroIr" x="406" y="287" label="Me quiero ir" visible="false" click="iWannaGo()"/>
	<mx:ProgressBar id="progress" x="406" y="316" mode="manual" minimum="0" maximum="10" complete="completed(event)" visible="false"/>
	<s:Button id="puerta3" x="309" y="160" label="Puerta 3" click="clicked(event)" visible="false"/>
	<s:Button id="puerta4" x="425" y="160" label="Puerta 4" click="clicked(event)" visible="false"/>
	<s:Button id="puerta5" x="500" y="160" label="Puerta 5" click="clicked(event)" visible="false"/>
</s:Application>
